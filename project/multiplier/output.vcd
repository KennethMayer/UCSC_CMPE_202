$version Generated by VerilatedVcd $end
$date Sat Oct 20 19:47:37 2018
 $end
$timescale   1ns $end

 $scope module TOP $end
  $var wire  1 ? clk $end
  $var wire  1 F done_o $end
  $var wire 64 D multiplicand_i [63:0] $end
  $var wire 64 B multiplier_i [63:0] $end
  $var wire 64 I product_high_o [63:0] $end
  $var wire 64 G product_low_o [63:0] $end
  $var wire  1 @ reset_i $end
  $var wire  1 A start_i $end
  $scope module multiplication_block $end
   $var wire  1 ? clk $end
   $var wire 64 . current [63:0] $end
   $var wire  1 6 done_next $end
   $var wire  1 F done_o $end
   $var wire  6 ; index [5:0] $end
   $var wire  6 2 index_next [5:0] $end
   $var wire  6 < leading_one [5:0] $end
   $var wire  6 3 leading_one_next [5:0] $end
   $var wire 64 D multiplicand_i [63:0] $end
   $var wire 64 B multiplier_i [63:0] $end
   $var wire  1 # negate $end
   $var wire 128 7 partial [127:0] $end
   $var wire 128 & partial_next [127:0] $end
   $var wire  1 > pending $end
   $var wire  1 5 pending_next $end
   $var wire 64 , product_high_next [63:0] $end
   $var wire 64 I product_high_o [63:0] $end
   $var wire 64 * product_low_next [63:0] $end
   $var wire 64 G product_low_o [63:0] $end
   $var wire  3 = recode [2:0] $end
   $var wire  3 4 recode_next [2:0] $end
   $var wire  1 @ reset_i $end
   $var wire  1 % shift $end
   $var wire  1 A start_i $end
   $var wire 64 0 temp [63:0] $end
   $var wire  1 $ zero $end
   $scope module done_flop $end
    $var wire 32 T Bits [31:0] $end
    $var wire  1 ? clk $end
    $var wire  1 6 d [0:0] $end
    $var wire  1 L load $end
    $var wire  1 L load_val [0:0] $end
    $var wire  1 F q [0:0] $end
    $var wire  1 @ reset $end
   $upscope $end
   $scope module leading_one_flop $end
    $var wire 32 W Bits [31:0] $end
    $var wire  1 ? clk $end
    $var wire  6 3 d [5:0] $end
    $var wire  1 L load $end
    $var wire  6 X load_val [5:0] $end
    $var wire  6 < q [5:0] $end
    $var wire  1 @ reset $end
   $upscope $end
   $scope module partial_flop $end
    $var wire 32 O Bits [31:0] $end
    $var wire  1 ? clk $end
    $var wire 128 & d [127:0] $end
    $var wire  1 L load $end
    $var wire 128 P load_val [127:0] $end
    $var wire 128 7 q [127:0] $end
    $var wire  1 @ reset $end
   $upscope $end
   $scope module pending_flop $end
    $var wire 32 T Bits [31:0] $end
    $var wire  1 ? clk $end
    $var wire  1 5 d [0:0] $end
    $var wire  1 L load $end
    $var wire  1 L load_val [0:0] $end
    $var wire  1 > q [0:0] $end
    $var wire  1 @ reset $end
   $upscope $end
   $scope module product_high_flop $end
    $var wire 32 K Bits [31:0] $end
    $var wire  1 ? clk $end
    $var wire 64 , d [63:0] $end
    $var wire  1 L load $end
    $var wire 64 M load_val [63:0] $end
    $var wire 64 I q [63:0] $end
    $var wire  1 @ reset $end
   $upscope $end
   $scope module product_low_flop $end
    $var wire 32 K Bits [31:0] $end
    $var wire  1 ? clk $end
    $var wire 64 * d [63:0] $end
    $var wire  1 L load $end
    $var wire 64 M load_val [63:0] $end
    $var wire 64 G q [63:0] $end
    $var wire  1 @ reset $end
   $upscope $end
   $scope module recode_flop $end
    $var wire 32 U Bits [31:0] $end
    $var wire  1 ? clk $end
    $var wire  3 4 d [2:0] $end
    $var wire  1 L load $end
    $var wire  3 V load_val [2:0] $end
    $var wire  3 = q [2:0] $end
    $var wire  1 @ reset $end
   $upscope $end
   $scope module recode_index_flop $end
    $var wire 32 W Bits [31:0] $end
    $var wire  1 ? clk $end
    $var wire  6 2 d [5:0] $end
    $var wire  1 L load $end
    $var wire  6 X load_val [5:0] $end
    $var wire  6 ; q [5:0] $end
    $var wire  1 @ reset $end
   $upscope $end
   $scope module recoder $end
    $var wire  1 # negate_o $end
    $var wire  1 % shift_o $end
    $var wire  3 = value_i [2:0] $end
    $var wire  1 $ zero_o $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
1$
0%
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 &
b0000000000000000000000000000000000000000000000000000000000000000 *
b0000000000000000000000000000000000000000000000000000000000000000 ,
b0000000000000000000000000000000000000000000000000000000000000000 .
b0000000000000000000000000000000000000000000000000000000000000000 0
b000001 2
b011110 3
b110 4
15
06
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 7
b000000 ;
b000000 <
b000 =
0>
1?
1@
1A
b0000000000000000000000000000000001110001100010000111100110000111 B
b0000000000000000000000000000000001001100101011111111011110110011 D
0F
b0000000000000000000000000000000000000000000000000000000000000000 G
b0000000000000000000000000000000000000000000000000000000000000000 I
b00000000000000000000000001000000 K
0L
b0000000000000000000000000000000000000000000000000000000000000000 M
b00000000000000000000000010000000 O
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 P
b00000000000000000000000000000001 T
b00000000000000000000000000000011 U
b000 V
b00000000000000000000000000000110 W
b000000 X
#0
0?
#1
#1
1?
#2
0@
#2
0?
#3
#3
1#
0$
b11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110001110011101111000011001111001 &
b1111111111111111111111111111111110001110011101111000011001111001 .
b0000000000000000000000000000000000100110010101111111101111011001 0
b000011 2
b001 4
b000001 ;
b011110 <
b110 =
1>
1?
#4
0A
#4
0?
#5
#5
0#
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010100100110010110110010010101 &
b0000000000000000000000000000000001110001100010000111100110000111 .
b0000000000000000000000000000000000001001100101011111111011110110 0
b000101 2
b110 4
b11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110001110011101111000011001111001 7
b000011 ;
b001 =
1?
#6
#6
0?
#7
#7
1#
b11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111101000111100000100011101010000100101 &
b1111111111111111111111111111111110001110011101111000011001111001 .
b0000000000000000000000000000000000000010011001010111111110111101 0
b000111 2
b101 4
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101010100100110010110110010010101 7
b000101 ;
b110 =
1?
#8
#8
0?
#9
#9
b11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111101110111011001111100110111001001100101 &
b0000000000000000000000000000000000000000100110010101111111101111 0
b001001 2
b111 4
b11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111101000111100000100011101010000100101 7
b000111 ;
b101 =
1?
#10
#10
0?
#11
#11
0#
1$
b0000000000000000000000000000000000000000000000000000000000000000 .
b0000000000000000000000000000000000000000001001100101011111111011 0
b001011 2
b011 4
b11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111101110111011001111100110111001001100101 7
b001001 ;
b111 =
1?
#12
#12
0?
#13
#13
0$
1%
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000110110101000011101101111111010101001100101 &
b0000000000000000000000000000000011100011000100001111001100001110 .
b0000000000000000000000000000000000000000000010011001010111111110 0
b001101 2
b110 4
b001011 ;
b011 =
1?
#14
#14
0?
#15
#15
1#
0%
b11111111111111111111111111111111111111111111111111111111111111111111111111111111111111000101000110010110001001110011101001100101 &
b1111111111111111111111111111111110001110011101111000011001111001 .
b0000000000000000000000000000000000000000000000100110010101111111 0
b001111 2
b111 4
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000110110101000011101101111111010101001100101 7
b001101 ;
b110 =
1?
#16
#16
0?
#17
#17
0#
1$
b0000000000000000000000000000000000000000000000000000000000000000 .
b0000000000000000000000000000000000000000000000001001100101011111 0
b010001 2
b11111111111111111111111111111111111111111111111111111111111111111111111111111111111111000101000110010110001001110011101001100101 7
b001111 ;
b111 =
1?
#18
#18
0?
#19
#19
b0000000000000000000000000000000000000000000000000010011001010111 0
b010011 2
b010001 ;
1?
#20
#20
0?
#21
#21
b0000000000000000000000000000000000000000000000000000100110010101 0
b010101 2
b101 4
b010011 ;
1?
#22
#22
0?
#23
#23
1#
0$
b11111111111111111111111111111111111111111111111111111111111111111111111111111000111000111100100111111101101101110011101001100101 &
b1111111111111111111111111111111110001110011101111000011001111001 .
b0000000000000000000000000000000000000000000000000000001001100101 0
b010111 2
b010101 ;
b101 =
1?
#24
#24
0?
#25
#25
b11111111111111111111111111111111111111111111111111111111111111111111111111011100100000011010101110011011111101110011101001100101 &
b0000000000000000000000000000000000000000000000000000000010011001 0
b011001 2
b001 4
b11111111111111111111111111111111111111111111111111111111111111111111111111111000111000111100100111111101101101110011101001100101 7
b010111 ;
1?
#26
#26
0?
#27
#27
0#
b00000000000000000000000000000000000000000000000000000000000000000000000001001110000010100010010100100010111101110011101001100101 &
b0000000000000000000000000000000001110001100010000111100110000111 .
b0000000000000000000000000000000000000000000000000000000000100110 0
b011011 2
b110 4
b11111111111111111111111111111111111111111111111111111111111111111111111111011100100000011010101110011011111101110011101001100101 7
b011001 ;
b001 =
1?
#28
#28
0?
#29
#29
1#
b11111111111111111111111111111111111111111111111111111111111111111111111010000111111010000011111100000110111101110011101001100101 &
b1111111111111111111111111111111110001110011101111000011001111001 .
b0000000000000000000000000000000000000000000000000000000000001001 0
b011101 2
b001 4
b00000000000000000000000000000000000000000000000000000000000000000000000001001110000010100010010100100010111101110011101001100101 7
b011011 ;
b110 =
1?
#30
#30
0?
#31
#31
0#
b00000000000000000000000000000000000000000000000000000000000000000000010110100000011011111101011101110110111101110011101001100101 &
b0000000000000000000000000000000001110001100010000111100110000111 .
b0000000000000000000000000000000000000000000000000000000000000010 0
b011111 2
b010 4
b11111111111111111111111111111111111111111111111111111111111111111111111010000111111010000011111100000110111101110011101001100101 7
b011101 ;
b001 =
1?
#32
#32
0?
#33
#33
b00000000000000000000000000000000000000000000000000000000000000000010001000000010100011100011100100110110111101110011101001100101 &
b0000000000000000000000000000000000000000000000000000000000000000 0
b100001 2
b000 4
05
b00000000000000000000000000000000000000000000000000000000000000000000010110100000011011111101011101110110111101110011101001100101 7
b011111 ;
b010 =
1?
#34
#34
0?
#35
#35
1$
b0010001000000010100011100011100100110110111101110011101001100101 *
b0000000000000000000000000000000000000000000000000000000000000000 .
16
b00000000000000000000000000000000000000000000000000000000000000000010001000000010100011100011100100110110111101110011101001100101 7
b100001 ;
b000 =
0>
1?
#36
#36
0?
#37
#37
1?
1F
b0010001000000010100011100011100100110110111101110011101001100101 G
#38
